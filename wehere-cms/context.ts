import fs from "fs";

import type { Context } from ".keystone/types";
import * as PrismaModule from ".prisma/client";
import { getContext } from "@keystone-6/core/context";

import config from "./keystone";

const originalReadFileSync = fs.readFileSync;

const SCHEMA_PRISMA_CONTENT = decodeURIComponent(
  "%2F%2F This file is automatically generated by Keystone%2C do not modify it manually.%0A%2F%2F Modify your Keystone config when you want " +
    "to change this.%0A%0Adatasource postgresql %7B%0A  url               %3D env(%22DATABASE_URL%22)%0A  shadowDatabaseUrl %3D env(%22SHADO" +
    "W_DATABASE_URL%22)%0A  provider          %3D %22postgresql%22%0A%7D%0A%0Agenerator client %7B%0A  provider %3D %22prisma-client-js%22%0" +
    "A%7D%0A%0Amodel User %7B%0A  id               String    %40id %40default(cuid())%0A  name             String    %40default(%22%22)%0A  " +
    "email            String    %40unique %40default(%22%22)%0A  password         String%0A  posts            Post%5B%5D    %40relation(%22P" +
    "ost_author%22)%0A  createdAt        DateTime%3F %40default(now())%0A  avatar_filesize  Int%3F%0A  avatar_extension String%3F%0A  avatar" +
    "_width     Int%3F%0A  avatar_height    Int%3F%0A  avatar_id        String%3F%0A%7D%0A%0Amodel Post %7B%0A  id                  String  " +
    "%40id %40default(cuid())%0A  name                String  %40default(%22%22)%0A  title               String  %40default(%22%22)%0A  pare" +
    "nt              Post%3F   %40relation(%22Post_parent%22%2C fields%3A %5BparentId%5D%2C references%3A %5Bid%5D)%0A  parentId            " +
    "String%3F %40map(%22parent%22)%0A  heroImage_filesize  Int%3F%0A  heroImage_extension String%3F%0A  heroImage_width     Int%3F%0A  hero" +
    "Image_height    Int%3F%0A  heroImage_id        String%3F%0A  content             Json    %40default(%22%5B%7B%5C%22type%5C%22%3A%5C%22p" +
    "aragraph%5C%22%2C%5C%22children%5C%22%3A%5B%7B%5C%22text%5C%22%3A%5C%22%5C%22%7D%5D%7D%5D%22)%0A  author              User%3F   %40rela" +
    "tion(%22Post_author%22%2C fields%3A %5BauthorId%5D%2C references%3A %5Bid%5D)%0A  authorId            String%3F %40map(%22author%22)%0A" +
    "  tags                Tag%5B%5D   %40relation(%22Post_tags%22)%0A  from_Post_parent    Post%5B%5D  %40relation(%22Post_parent%22)%0A%0A" +
    "  %40%40index(%5BparentId%5D)%0A  %40%40index(%5BauthorId%5D)%0A%7D%0A%0Amodel Tag %7B%0A  id    String %40id %40default(cuid())%0A  na" +
    "me  String %40default(%22%22)%0A  posts Post%5B%5D %40relation(%22Post_tags%22)%0A%7D%0A"
);

(fs as any).readFileSync = (file: string, ...others: unknown[]) => {
  if (file.endsWith(".prisma")) {
    return SCHEMA_PRISMA_CONTENT;
  }
  try {
    return (originalReadFileSync as any)(file, ...others);
  } catch (error) {
    console.error({ cwd: process.cwd(), file, others, error });
    throw error;
  }
};

// Making sure multiple prisma clients are not created during dev hot reloading
export const keystoneContext: Context =
  (globalThis as any).keystoneContext || getContext(config, PrismaModule);

if (process.env.NODE_ENV !== "production") {
  (globalThis as any).keystoneContext = keystoneContext;
}

export type { PrismaModule };
